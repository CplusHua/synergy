name: Build Synergy

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Test Synergy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
          


    - name: Setup Visual Studio
      if: ${{ matrix.os == 'windows-latest' }}
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: "latest"
        msbuild-architecture: ${{ matrix.arch }}

    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.x'
        
    # - name: Verify MSBuild Installation
    #   if: ${{ matrix.os == 'windows-latest' }}
    #   run: |
    #     "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"
    
    # - uses: ilammy/msvc-dev-cmd@v1
    #   with:
    #     arch: ${{ matrix.arch }}
      
    # - name: Install dependencies
    #   shell: bash
    #   run: |
    #     if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
    #       choco install ninja
    #     fi
        
    #     if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
    #       python scripts/install_deps.py
    #     else
    #       ./scripts/install_deps.py
    #     fi

    - name: Configure build
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
          cmake -B build --preset=linux-release
        elif [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
          cmake -B build --preset=macos-release
        elif [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
          # "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"
          "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat" 
          cmake -B build --preset=windows-release
        fi
        
    - name: Set up build environment
      shell: bash
      run: |
        echo "VERSION_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
        echo "CURRENT_DATE=$(date -u +"%Y-%m-%d")" >> $GITHUB_ENV
        
    - name: Build Synergy
      run: cmake --build build -j8
      
    - name: List build directory
      run: ls -la build/ ; find ./build/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: synergy-build-${{ matrix.os }}-${{ env.VERSION_TAG }}-${{ env.CURRENT_DATE }}
        path: |
          build/bin/
        if-no-files-found: warn


